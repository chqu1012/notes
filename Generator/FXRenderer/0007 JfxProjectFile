public class JfxProjectFile {

    public JfxProject load(String filePath) {
        URI uri = URI.createFileURI(filePath);

        ModelPackage.eINSTANCE.eClass();
        Resource.Factory.Registry reg = Resource.Factory.Registry.INSTANCE;
        Map<String, Object> m = reg.getExtensionToFactoryMap();
        m.put("model", new XMIResourceFactoryImpl());
        ResourceSet resSet = new ResourceSetImpl();
        Resource resource = resSet.getResource(uri, true);
        JfxProject model = (JfxProject) resource.getContents().get(0);
        return model;
    }

    public void write(JfxProject model, String path) {
        URI uri = URI.createFileURI(path);
        // Initialize the model
        ModelPackage.eINSTANCE.eClass();
        // Retrieve the default factory singleton
        ModelFactory factory = ModelFactory.eINSTANCE;

        Resource.Factory.Registry reg = Resource.Factory.Registry.INSTANCE;
        Map<String, Object> m = reg.getExtensionToFactoryMap();
        m.put("model", new XMIResourceFactoryImpl());

        // Obtain a new resource set
        ResourceSet resSet = new ResourceSetImpl();

        // create a resource
        Resource resource = resSet.createResource(uri);
        // Get the first model element and cast it to the right type, in my
        // example everything is hierarchical included in this first node
        resource.getContents().add(model);

        try {
            resource.save(Collections.EMPTY_MAP);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
