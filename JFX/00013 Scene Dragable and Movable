import java.net.InetAddress;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.context.annotation.Bean;

import javafx.application.Application;
import javafx.application.HostServices;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.layout.AnchorPane;
import javafx.stage.Stage;
import javafx.stage.StageStyle;

@SpringBootApplication
public class SpringBootFXApplication extends Application {

  private ConfigurableApplicationContext springContext;
  private AnchorPane root;
	private FXMLLoader fxmlLoader;
	private Stage primaryStage;
	
	private static boolean showUI = true;
	
	private static double xOffset = 0;
    private static double yOffset = 0;
	
    private boolean undecorateWindow=true;
    
    @Override
    public void init() throws Exception {
        springContext = SpringApplication.run(SpringBootFXApplication.class);
        fxmlLoader = new FXMLLoader(getClass().getResource("/de/dc/fx/ui/Main.fxml"));
        fxmlLoader.setControllerFactory(springContext::getBean);
        root = fxmlLoader.load();
    }

    @Override
    public void start(Stage primaryStage) throws Exception {
    	if (showUI) {
    		final Scene scene = new Scene(root, 500, 780);
    		scene.setOnKeyPressed(event -> {
    			switch (event.getCode()) {
					case F12:
						primaryStage.setFullScreen(!primaryStage.isFullScreen());
						break;
					case F11:
						primaryStage.setAlwaysOnTop(!primaryStage.isAlwaysOnTop());
					default:
						break;
				}
			});
    		this.primaryStage = primaryStage;
    		this.primaryStage.setScene(scene);
    		this.primaryStage.initStyle(StageStyle.DECORATED);
    		undecorateStage(primaryStage);
    		this.primaryStage.show();
    		this.primaryStage.setTitle("(C)opyright by Me, 2018, SpringBootFX Application");

		}
        
        System.out.println("IP-ADDRESS: "+InetAddress.getLocalHost().getHostAddress()+":8080");
    }
    
	private void undecorateStage(Stage primaryStage) {
		if (undecorateWindow) {
			this.primaryStage.initStyle(StageStyle.UNDECORATED);
			root.setOnMousePressed(event -> {
				xOffset = primaryStage.getX() - event.getScreenX();
				yOffset = primaryStage.getY() - event.getScreenY();
			});
			
			root.setOnMouseDragged(event -> {
				primaryStage.setX(event.getScreenX() + xOffset);
				primaryStage.setY(event.getScreenY() + yOffset);
			});
		}
	}

    @Override
    public void stop() throws Exception {
        springContext.stop();
        System.exit(0);
    }

    @Bean
    public HostServices getHostService() {
    	return getHostServices();
    }
    
    public static void main(String[] args) {
    	int parmeterLength=args.length;
    	if (parmeterLength==0) {
    		showUI=true;
		}else {
			showUI=Boolean.valueOf(args[0]);
		}
    	launch(SpringBootFXApplication.class);
    }
}
